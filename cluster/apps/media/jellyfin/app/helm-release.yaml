---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync
  values:
    controllers:
      jellyfin:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups: [ 44, 105, 10000]

        containers:
          main:
            image:
              repository: ghcr.io/jellyfin/jellyfin
              tag: 10.9.7@sha256:76930362d2c266e8f0b2f51f1c6b039a5207525d0e138a1cdbec870c66c34b0f
            env:
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 50000000
              JELLYFIN_PublishedServerUrl: &loadBalancerIP 192.168.100.31
              TZ: "${CLUSTER_TZ}"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 100m
                memory: 500Mi
              limits:
                memory: 4000Mi

    service:
      app:
        controller: jellyfin
        type: LoadBalancer
        externalIPs: [*loadBalancerIP]
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.ergho.org"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
      tailscale:
        enabled: true
        className: tailscale
        hosts:
          - host: &tshost jellyfin
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *tshost
    persistence:
      config:
        enabled: true
        existingClaim: config-jellyfin-0
        globalMounts:
          - path: /config
      transcode:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /transcode
      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /cache
      media:
        type: persistentVolumeClaim
        existingClaim: media
        globalMounts:
          - path: /media
            readOnly: true
