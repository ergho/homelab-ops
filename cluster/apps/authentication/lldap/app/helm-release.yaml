---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lldap
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      lldap:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6
            envFrom: &envFrom
              - secretRef:
                  name: lldap-secret
        containers:
          app:
            image:
              repository: nitnelave/lldap
              tag: v0.6.2
            env:
              TZ: Europe/Stockholm
              LLDAP_HTTP_PORT: &port 80
              LLDAP_HTTP_URL: https://lldap.ergho.org
              LLDAP_LDAP_PORT: &ldapPort 389
              LLDAP_SMTP_OPTIONS__ENABLE_PASSWORD_RESET: true
              LLDAP_SMTP_OPTIONS__SERVER: "smtp.gmail.com"
              LLDAP_SMTP_OPTIONS__PORT: "465"
              LLDAP_SMTP_OPTIONS__FROM: "LLDAP Admin <lldap@ergho.org>"
              LLDAP_SMTP_OPTIONS__SMTP_ENCRYPTION: "TLS"
              LLDAP_SMTP_OPTIONS__REPLY_TO: "No reply <noreply@ergho.org>"
              LLDAP_VERBOSE: true
            envFrom: *envFrom
        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
    service:
      app:
        controller: lldap
        ports:
          http:
            port: *port
          ldap:
            port: *ldapPort
      lldap:
        controller: lldap
        externalIPs:
          - 192.168.100.35
        externalTrafficPolicy: Cluster
        ports:
          ldap:
            port: *ldapPort
    ingress:
      app:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.ergho.org"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
      tailscale:
        enabled: true
        className: tailscale
        hosts:
          - host: &tshost lldap
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *tshost
    persistence:
      data:
        type: emptyDir
