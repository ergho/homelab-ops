---
- name: Kubernetes | Configure first control plane node
  block:
    - name: Kubernetes | Initialize cluster {{ k8s_version }} with kubeadm
      become: true
      args:
        creates: "{{ k8s_admin_config }}"
      ansible.builtin.command:
        'kubeadm init --kubernetes-version "{{ k8s_version }}" --pod-network-cidr
        "{{ k8s_pod_network }}" --service-cidr "{{ k8s_service_network }}" --control-plane-endpoint
        "{{ k8s_cluster_endpoint }}:{{ k8s_api_port }}" --upload-certs'

    - name: Kubernetes | Setup Kubeconfig for {{ k8s_user }} User
      ansible.builtin.file:
        path: "{{ k8s_user_dir }}/.kube"
        state: directory
        group: "{{ k8s_user }}"
        owner: "{{ k8s_user }}"
        mode: 0750

    - name: Kubernetes | Copy {{ k8s_admin_config }}
      become: true
      ansible.builtin.copy:
        src: "{{ k8s_admin_config }}"
        dest: "{{ k8s_user_dir }}/.kube/config"
        group: "{{ k8s_user }}"
        owner: "{{ k8s_user }}"
        mode: 0640
        remote_src: true

    - name: Kubernetes | Download Manifests
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ k8s_user_dir }}/{{ item.filename }}"
        owner: "{{ k8s_user }}"
        group: "{{ k8s_user }}"
        mode: "0640"
      loop: "{{ manifest_urls }}"

    - name: Calico | Copy Calico Templates
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "{{ k8s_user_dir }}/{{ item }}"
      loop: "{{ calico_templates }}"

    - name: Kubernetes | Create Calico
      become: false
      ansible.builtin.command: kubectl create -f {{ k8s_user_dir }}/{{ item.filename }}
      loop: "{{ manifest_urls }}"

    - name: Calico | Apply Calico Templates
      become: false
      ansible.builtin.command: kubectl apply -f {{ k8s_user_dir }}/{{ item }}
      loop: "{{ calico_templates }}"

    - name: Kubernetes | Generate node join command
      command: "kubeadm token create --print-join-command"
      register: join_node_command

    - name: Kubernetes | Copy node join command to local file
      become: false
      copy:
        content: "{{ join_node_command.stdout_lines[0] }}"
        dest: "../{{ k8s_token_file_node }}"
        mode: 420
      delegate_to: localhost
  when: "'controller' in group_names"

- name: "configure worker nodes"
  block:
    - name: "copy {{ k8s_token_file_node }} to worker nodes"
      copy:
        dest: "{{ k8s_user_dir }}/{{ k8s_token_file_node }}.sh"
        group: "{{ k8s_user }}"
        mode: 488
        owner: "{{ k8s_user }}"
        src: "../{{ k8s_token_file_node }}"

    - name: "join worker node to cluster unless file {{ k8s_kubelet_config }} exists"
      command: 'sh "{{ k8s_user_dir }}/{{ k8s_token_file_node }}.sh"'
      args:
        creates: "{{ k8s_kubelet_config }}"
  when: "'worker' in group_names"
