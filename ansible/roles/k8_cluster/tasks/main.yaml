---
- block:
    - name: Kubernetes | Configure first control plane node
      become: true
      args:
        creates: "{{ k8s_admin_config }}"
      ansible.builtin.command:
        'kubeadm init --kubernetes-version "{{ k8s_version }}" --pod-network-cidr
        "{{ k8s_pod_network }}" --service-cidr "{{ k8s_service_network }}" --control-plane-endpoint
        "{{ k8s_cluster_endpoint }}:{{ k8s_api_port }}" --upload-certs'

    - name: Kubernetes | Setup Kubeconfig for {{ k8s_user }} User
      ansible.builtin.file:
        path: "{{ k8s_user_dir }}/.kube"
        state: directory
        group: "{{ k8s_user }}"
        owner: "{{ k8s_user }}"
        mode: 0750

    - name: Kubernetes | Copy {{ k8s_admin_config }}
      become: true
      ansible.builtin.copy:
        src: "{{ k8s_admin_config }}"
        dest: "{{ k8s_user_dir }}/.kube/config"
        group: "{{ k8s_user }}"
        owner: "{{ k8s_user }}"
        mode: 0640
        remote_src: true

    - name: Kubernetes | Download {{ calico_net_url}}
      ansible.builtin.get_url:
        url: "{{ calico_net_url }}"
        dest: "{{ k8s_user_dir }}/{{ calico_net_config }}"
        group: "{{ k8s_user }}"
        owner: "{{ k8s_user }}"
        mode: 0640

    - name: Calico | Install Operator
      command: 'kubectl create -f "{{ k8s_user_dir }}/{{ calico_net_config }}"'

    - name: Calico | Templates
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "{{ k8s_user_dir }}"
      loop: "{{ calico_templates }}"

    - name: Calico | Apply Templates
      ansible.builtin.command: 'kubectl apply -f "{{ k8s_user_dir }}/{{ item }}"'
      loop: "{{ calico_templates }}"

    - name: Kubernetes | Generate node join command
      command: "kubeadm token create --print-join-command"
      register: join_node_command

    - name: Kubernetes | Copy node join command to local file
      copy:
        content: "{{ join_node_command.stdout_lines[0] }}"
        dest: "../{{ k8s_token_file_node }}"
        mode: 420
      delegate_to: localhost
  name: "configure control plane"
  when: "'controller' in group_names"

- block:
    - copy:
        dest: "{{ k8s_user_dir }}/{{ k8s_token_file_node }}.sh"
        group: "{{ k8s_user }}"
        mode: 488
        owner: "{{ k8s_user }}"
        src: "../{{ k8s_token_file_node }}"
      name: "copy {{ k8s_token_file_node }} to worker nodes"
    - args:
        creates: "{{ k8s_kubelet_config }}"
      command: 'sh "{{ k8s_user_dir }}/{{ k8s_token_file_node }}.sh"'
      name: "join worker node to cluster unless file {{ k8s_kubelet_config }} exists"
  name: "configure worker nodes"
  when: "'worker' in group_names"
