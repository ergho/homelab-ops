---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Helm Repository Sync"

on:
  workflow_dispatch:
    inputs:
      helmRepoNamespace:
        description: Helm Repository Namespace"
        default: flux-system
        required: true
      helmRepoName:
        description: "Helm Repository Name"
        required: true
  pull_request:
    branches: ["main"]
    paths: ["cluster/**/helm-release.yaml"]

env:
  HOMEBREW_NO_ANALYTICS: "1"

jobs:
  sync:
    name: Helm Repository Sync
    runs-on: ["homelab-ops-runner"]
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Workflow Tools
        run: brew install fluxcd/tap/flux

      - name: Write kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@v1
        with:
          encodedString: ${{ secrets.KUBECONFIG }}
          fileName: kubeconfig

      - if: ${{ github.event.inputs.helmRepoNamespace == '' && github.event.inputs.helmRepoName == '' }}
        name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            cluster/**/helm-release.yaml
          safe_output: false

      - if: ${{ github.event.inputs.helmRepoNamespace == '' && github.event.inputs.helmRepoName == '' }}
        name: Sync HelmRepository
        env:
          KUBECONFIG: ${{ steps.kubeconfig.outputs.filePath }}
        run: |
          declare -A repos=()
          for f in ${{ steps.changed-files.outputs.all_changed_and_modified_files }}; do
              repo_namespace="$(yq -r '.spec.chart.spec.sourceRef.namespace' "${f}")"
              repo_name="$(yq -r '.spec.chart.spec.sourceRef.name' "${f}")"
              repos["${repo_namespace}:${repo_name}"]=1
          done
          for r in "${!repos[@]}"; do
              IFS=':' read -r repo_namespace repo_name <<< "${r}"
              flux --namespace ${repo_namespace} \
                  reconcile source helm ${repo_name} || true
          done

      - if: ${{ github.event.inputs.helmRepoNamespace != '' && github.event.inputs.helmRepoName != '' }}
        name: Sync Helm Repository
        env:
          KUBECONFIG: ${{ steps.kubeconfig.outputs.filePath }}
        run: |
          flux \
              --namespace ${{ github.event.inputs.helmRepoNamespace }} \
              reconcile source helm ${{ github.event.inputs.helmRepoName }} || true
